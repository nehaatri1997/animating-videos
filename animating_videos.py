# -*- coding: utf-8 -*-
"""animating videos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17Glid3AoNSJbbORpO3ypdLgZr7RES9Og
"""

pip install pillow gtts moviepy

from gtts import gTTS
from PIL import Image, ImageDraw, ImageFont
import moviepy.editor as mp
import os

# Step 1: Define the Story
story = [
    "once there was a little rat who loved to explore the mountains.",
    "He loved exploring the forest and meeting new friends.",
    "One day, he found a little turtle by the river."
]

# Step 2: Create Images for Each Part of the Story
def create_image(text, image_path, img_size=(640, 480), bg_color=(255, 255, 255), text_color=(0, 0, 0)):
    # Create a blank image with white background
    img = Image.new('RGB', img_size, bg_color)

    # Load a font
    try:
        font = ImageFont.truetype("arial.ttf", 30)
    except:
        font = ImageFont.load_default()

    # Initialize ImageDraw
    d = ImageDraw.Draw(img)

    # Define text position and draw text
    text_position = (50,  img_size[1] // 2)
    d.text(text_position, text, fill=text_color, font=font)

    # Save the image
    img.save(image_path)

# Create images for each story part
image_paths = []
for i, part in enumerate(story):
    image_path = f"story_part_{i + 1}.jpg"
    create_image(part, image_path)
    image_paths.append(image_path)

# prompt: show the resulted images

from IPython.display import Image, display

for image_path in image_paths:
  display(Image(filename=image_path))

# Step 3: Generate Audio for Each Story Part Using gTTS
audio_paths = []
for i, part in enumerate(story):
    tts = gTTS(text=part, lang='en')
    audio_path = f"story_part_{i + 1}.mp3"
    tts.save(audio_path)
    audio_paths.append(audio_path)

# prompt: the resulted audio

# Assuming you have already run the code to create the audio files (story_part_1.mp3, etc.)

from IPython.display import Audio

# Play the audio for the first part of the story
Audio("story_part_1.mp3")

# Step 4: Create a video using MoviePy
clips = []
for i in range(len(story)):
    # Load the image
    image_clip = mp.ImageClip(image_paths[i]).set_duration(5)  # 5 seconds per image

    # Load the audio and sync with the image
    audio_clip = mp.AudioFileClip(audio_paths[i])
    image_clip = image_clip.set_audio(audio_clip)

    clips.append(image_clip)

# Step 5: Concatenate all clips into one video
final_video = mp.concatenate_videoclips(clips)

# Step 6: Export the video
final_video.write_videofile("story_animation.mp4", fps=24)

# Clean up generated files
for image_path in image_paths:
    os.remove(image_path)
for audio_path in audio_paths:
      os.remove(audio_path)

# Display the video in the notebook
from IPython.display import HTML
from base64 import b64encode

mp4 = open('story_animation.mp4','rb').read()
data_url = "data:video/mp4;base64," + b64encode(mp4).decode()
HTML("""
<video width=400 controls>
      <source src="%s" type="video/mp4">
</video>
""" % data_url)